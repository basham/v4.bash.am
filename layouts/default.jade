- var isArticle = contains(collection, 'articles');
- var isWork = contains(collection, 'work');
- var isTalk = contains(collection, 'talks');
- var isCollection = isArticle || isWork || isTalk;
doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(
      http-equiv="X-UA-Compatible"
      content="IE=edge")
    meta(
      name="viewport"
      content="width=device-width, initial-scale=1.0")
    meta(
      name="description"
      content=site.description)
    meta(
      name="author"
      content=site.author)
    - var pubdate = date || startDate;
    if pubdate
      meta(
        name="date"
        content=pubdate)
    - var titles = hide_title ? [] : [title];
    if client
      - titles.push(client);
    - titles.push(site.author);
    - var pageTitle = titles.join(' &middot; ');
    title !{pageTitle}
    link(
      rel="shortcut icon"
      href="/favicon.ico"
      sizes="16x16 32x32")
    script
      include:js ../node_modules/fontfaceobserver/fontfaceobserver.js
      include:js ../node_modules/fg-loadcss/loadCSS.js
      include:js default.head.js
  body.Body#top
    header.Body-part.Body-part--constrain.Header(role="banner")
      - var cn = { 'Header-name--active': !path };
      a.Header-name(href="/", class=cn)= site.author
      nav.Header-nav.Nav(role="navigation")
        ul.Nav-list
          each page in collections.pages
            if page.order
              - var url = '/' + (page.path || '');
              - var isSelf = page.path === path;
              - var isInCollection = contains(collection, page.index);
              - var cn = { 'Nav-link--active': isSelf || isInCollection };
              li.Nav-item
                a.Nav-link(href=url, class=cn)= page.title
    main.Article(role="main")
      .Article-section
        h1.Article-h1= title
        if description
          p.Article-paragraph.Article-meta= description
        if isArticle
          p.Article-paragraph.Article-meta
            time.Article-time(datetime=date, pubdate)= dateFormat(date)
        if isWork
          p.Article-paragraph.Article-meta
            if client
              span.Article-client
                a.Link(href=clientLink)= client
            time.Article-time(datetime=startDate)= startDateLabel
            |  &ndash; 
            time.Article-time(datetime=endDate, pubdate)= endDateLabel
        if isTalk
          p.Article-paragraph.Article-meta
            | Presented #[time.Article-time(datetime=date, pubdate)= dateFormat(date)] at #[a.Link(href=locationLink)= location].
          if deckId
            figure.Figure.Figure--deck
              script(async, class="speakerdeck-embed" data-id=deckId data-ratio=deckRatio src="//speakerdeck.com/assets/embed.js")
              figcaption.Figure-caption
                a.Button(href=deckLink) View slide deck
                if recordingLink
                  a.Button(href=recordingLink) View recording
        md
          != contents
    if isCollection
      -
        function makeCollection(singular, plural, link) {
          return { singular: singular, plural: plural, link: link };
        }
        var metaCollection = null;
        if(isArticle) {
          metaCollection = makeCollection('article', 'articles', '/articles');
        }
        if(isWork) {
          metaCollection = makeCollection('work', 'work', '/work');
        }
        if(isTalk) {
          metaCollection = makeCollection('talk', 'talks', '/talks');
        }
        var collectionSingular = metaCollection.singular;
        var collectionPlural = metaCollection.plural;
        var allLink = metaCollection.link;
        var allLabel = ['All', collectionPlural].join(' ');
        collectionSingular += ',';
        collectionPlural += ',';
      nav.Body-part.Body-part--constrain.Pager(role="navigation")
        .Pager-wrap
          .Pager-controls
            a.Pager-control.Pager-top(href="#top") Back to top
            a.Pager-control(href=allLink)= allLabel
          .Pager-paging
            if next
              - var pagerDate = next.endDateLabel || dateFormat(next.date);
              - var pagerTitle = ['Previous', collectionSingular, 'published', pagerDate].join(' ')
              a.Pager-control.Pager-previous(
                href="/#{next.path}"
                title=pagerTitle)
                cite= next.title
            if previous
              - var pagerDate = previous.endDateLabel || dateFormat(previous.date);
              - var pagerTitle = ['Next', collectionSingular, 'published', pagerDate].join(' ')
              a.Pager-control.Pager-next(
                href="/#{previous.path}"
                title=pagerTitle)
                cite= previous.title
    script
      include:js default.body.js
